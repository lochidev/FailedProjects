@inject IHttpClientFactory ClientFactory
<div class="relative inline-block">
    <div>
        <button @onclick="ToggleMenu" type="button" class="inline-flex justify-center w-full rounded-md py-3 px-4 bg-indigo-900 font-bold text-yellow-500 focus:outline-none" aria-expanded="true" aria-haspopup="true">

            <svg class="-mr-1 ml-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </button>
    </div>
    @if (isMenuVisible)
    {
        <div class="absolute mt-2 w-56 rounded-md bg-gray-900 ring-1 ring-white ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
            <div class="py-1 hover:bg-gray-800">
                <button @onclick="ShowDeleteModal" class="text-red-600 font-extrabold block px-4 pr-40 py-2 text-sm focus:outline-none">Delete</button>
            </div>
        </div>
    }
    @if (isDeleteModalVisible)
    {
        <DeleteModal OnDelete="OnDeleteHandler" OnCancel="OnCancelHandler"/>
    }
</div>

@code {
    [Parameter]
    public string PostId { get; set; }
    [Parameter]
    public EventCallback<string> OnError { get; set; }
    [Parameter]
    public EventCallback<string> OnSuccess { get; set; }
    [Parameter] 
    public string PostCategory { get; set; }
    private bool isMenuVisible = false;
    private bool isDeleteModalVisible = false;
    private void ToggleMenu()
    {
        isMenuVisible = !isMenuVisible;
    }
    private void ShowDeleteModal()
    {
        isDeleteModalVisible = true;
        ToggleMenu();
    }
    private async Task OnDeleteHandler()
    {
        isDeleteModalVisible = false;
        if(string.IsNullOrWhiteSpace(PostId) || string.IsNullOrWhiteSpace(PostCategory))
        {
            await OnError.InvokeAsync("Oh oh! The web app has gone kaboom! Please report this error to us if you have time :(. Post id and category was null");
            return;       
        }
        try
        {
            var client = ClientFactory.CreateClient("WebAPI");
            var response = await client.GetAsync($"api/posts/delete?postid={PostId}&category={PostCategory}");
            if (response.IsSuccessStatusCode)
            {
                await OnSuccess.InvokeAsync("Success!");
            }
            else
            {
                await OnError.InvokeAsync("Something went wrong! :(");
            }
        }
        catch (Exception)
        {
            await OnError.InvokeAsync($"Oh oh! The web app has gone kaboom! Please report this error to us if you have time :(");
        }
    }
    private void OnCancelHandler()
    {
        isDeleteModalVisible = false;
    }
}
